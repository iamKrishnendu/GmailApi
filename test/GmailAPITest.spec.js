require('dotenv').config()
var chai = require('chai')
var expect = chai.expect
const sendMessage =  require('../src/pretests/SendEmailPretest')
const getMessage = require('../src/pretests/GetEmailPretest')
const yaml = require('js-yaml')
const fs = require('fs')
const raw = fs.readFileSync('./src/common/genericConstants.yaml', 'utf8')
const commonConstants = yaml.load(raw)

var response = null
var errorResponse = null
var messageId = null
var messageToBeSend =
`From: ${process.env.FROM_EMAIL}
To: ${process.env.TO_EMAIL}
Subject: ${process.env.EAMIL_SUBJECT}

${process.env.EMAIL_BODY}`


describe("Gmail API Test playground", function(){
    before("Send email", function(done){
         sendMessage(messageToBeSend).then(res=>{
             response = res
             messageId = res.data.id
             done() 
         }).catch(done);
       
    });
    describe("Test suite of Send Email tests", function(){
        it("To check the `200` status code of API once email sent successfully", function(){
            expect(response.status).to.be.equals(200)
           
        })
        it ("To check the response is not empty", function(){
            expect(response.data).to.not.null
           
        })
        it ("To check response contains `labelIds` as `SENT`", function(){
            expect(response.data.labelIds[0]).to.be.equals("SENT")
           
        })
        it ("To check `400` status code of API when no message body is passed", function(done){
            
            sendMessage("jfdjkskngr")
            .then(res =>{
                console.log(res)
                done()
            }).catch(err=>{
                errorResponse = err.response.data
                expect(errorResponse.error.code).to.be.equals(400)
                done()
            })
        })
        it ("To check error message when invalid message body passed", function(done){
            
            sendMessage("jfdjkskngr")
            .then(res =>{
                console.log(res)
                done()
            }).catch(err=>{
                errorResponse = err.response.data
                expect(errorResponse.error.message).to.be.equals(commonConstants.errorMessage.invalidMessageContent)
                done()
            })
        })
        it ("To check email has been sent successfully", function(done){
            
            getMessage()
                .then(res=>{
                    expect(res.data.messages[0].id).to.be.equals(messageId) 
                    done()
                }).catch(done)
        })
    })
});


















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































